import React from 'react';

import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';
import TableCell from '@material-ui/core/TableCell';
import TableHead from '@material-ui/core/TableHead';
import TableRow from '@material-ui/core/TableRow';
import TableSortLabel from '@material-ui/core/TableSortLabel';

// Enchanced header styling
const useStyles = makeStyles((theme: Theme) =>
    createStyles({
        root: {
            width: '100%',
        },
        paper: {
            width: '100%',
            marginBottom: theme.spacing(2),
        },
        table: {
            minWidth: 750,
        },
        visuallyHidden: {
            border: 0,
            clip: 'rect(0 0 0 0)',
            height: 1,
            margin: -1,
            overflow: 'hidden',
            padding: 0,
            position: 'absolute',
            top: 20,
            width: 1,
        },
    })
);

// Props type
type Order = 'asc' | 'desc';

interface EnhancedTableProps {
    onRequestSort: (event: React.MouseEvent<unknown>, property: number) => void;
    order: Order;
    orderBy: number;
    headers: Array<string>;
}

// Header component
function EnhancedTableHead(props: EnhancedTableProps) {
    const { order, orderBy, onRequestSort, headers } = props;
    const createSortHandler = (property: number) => (
        event: React.MouseEvent<unknown>
    ) => {
        onRequestSort(event, property);
    };

    const classes = useStyles();

    return (
        <TableHead>
            <TableRow>
                <TableCell />
                {headers.map((header, i) => (
                    <TableCell
                        key={header}
                        sortDirection={orderBy === i ? order : false}
                        {...(i === 0 ? {} : { align: 'right' })}
                    >
                        <TableSortLabel
                            active={orderBy === i}
                            direction={orderBy === i ? order : 'asc'}
                            onClick={createSortHandler(i)}
                        >
                            {header}
                            {orderBy === i ? (
                                <span className={classes.visuallyHidden}>
                                    {order === 'desc'
                                        ? 'sorted descending'
                                        : 'sorted ascending'}
                                </span>
                            ) : null}
                        </TableSortLabel>
                    </TableCell>
                ))}
            </TableRow>
        </TableHead>
    );
}

export default EnhancedTableHead;
