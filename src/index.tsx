// Import React libraries to render the root component.
import React from 'react';
import ReactDOM from 'react-dom';

// Import main component
import App from './App';

/**
 * Here I'll create a Redux store which I will use for storing the CVE data. The application will react to the changes
 * made within the store. Changes will be made using the filter drawer where the suer will be able to select the date and severity,
 * alongside those filters I will also filter for CVE ID's.
 *
 * I'm assuming the data in redux would come from an API. Since this is a test I will not be using any middleware to handle API calls.
 */
import { createStore, compose } from 'redux';

/**
 * The file sturecure for this redux store is a very simple version of what I would use for a real world application.
 * Since there is not much data to work with. I'm keeping it simple with a actions, reducers, constants folder structure.
 * Depending on the complexity of the application these could be shifted to the compoment directiores themselves which would make them
 * more meaningful when reading through the code.
 */
import reducers from './store/reducers';

// Redux Dev utility
declare global {
    interface Window {
        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;
    }
}
const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // This allows us to tap into the redux store. This function also compoes middleware witth redux.
const store = createStore(reducers, composeEnhancers()); // <== Middleware would go here

ReactDOM.render(
    // We're using this comonent to make sure our code is using best practices and methods used within the application are not depricated.
    <React.StrictMode>
        {/* This is our entry component to the application */}
        <App />
    </React.StrictMode>,
    document.getElementById('root')
);
